diff --git a/node_modules/react-native-tesseract-ocr/android/build.gradle b/node_modules/react-native-tesseract-ocr/android/build.gradle
index 885c6e5..6412ac7 100644
--- a/node_modules/react-native-tesseract-ocr/android/build.gradle
+++ b/node_modules/react-native-tesseract-ocr/android/build.gradle
@@ -10,18 +10,16 @@
 //   original location:
 //   - https://github.com/facebook/react-native/blob/0.58-stable/local-cli/templates/HelloWorld/android/app/build.gradle
 
-def DEFAULT_COMPILE_SDK_VERSION = 28
-def DEFAULT_BUILD_TOOLS_VERSION = '28.0.3'
-def DEFAULT_MIN_SDK_VERSION = 16
-def DEFAULT_TARGET_SDK_VERSION = 28
+def DEFAULT_COMPILE_SDK_VERSION = 35
+def DEFAULT_BUILD_TOOLS_VERSION = '35.0.0'
+def DEFAULT_MIN_SDK_VERSION = 24
+def DEFAULT_TARGET_SDK_VERSION = 34
+def DEFAULT_NDK_VERSION = '26.1.10909125'
 
 def safeExtGet(prop, fallback) {
     rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
 }
 
-apply plugin: 'com.android.library'
-apply plugin: 'maven'
-
 buildscript {
     // The Android Gradle plugin is only required when opening the android folder stand-alone.
     // This avoids unnecessary downloads and potential conflicts when the library is included as a
@@ -30,20 +28,23 @@ buildscript {
     if (project == rootProject) {
         repositories {
             google()
-            jcenter()
+            mavenCentral()
         }
         dependencies {
-            classpath 'com.android.tools.build:gradle:3.4.1'
+            classpath 'com.android.tools.build:gradle:8.1.0'
+            classpath 'com.facebook.react:react-native-gradle-plugin:0.76.0'
+            classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.0'
         }
     }
 }
 
 apply plugin: 'com.android.library'
-apply plugin: 'maven'
 
 android {
     compileSdkVersion safeExtGet('compileSdkVersion', DEFAULT_COMPILE_SDK_VERSION)
     buildToolsVersion safeExtGet('buildToolsVersion', DEFAULT_BUILD_TOOLS_VERSION)
+    ndkVersion safeExtGet('ndkVersion', DEFAULT_NDK_VERSION)
+
     defaultConfig {
         minSdkVersion safeExtGet('minSdkVersion', DEFAULT_MIN_SDK_VERSION)
         targetSdkVersion safeExtGet('targetSdkVersion', DEFAULT_TARGET_SDK_VERSION)
@@ -56,95 +57,17 @@ android {
 }
 
 repositories {
-    // ref: https://www.baeldung.com/maven-local-repository
     mavenLocal()
     maven {
         // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
         url "$rootDir/../node_modules/react-native/android"
     }
-    maven {
-        // Android JSC is installed from npm
-        url "$rootDir/../node_modules/jsc-android/dist"
-    }
     google()
-    jcenter()
+    mavenCentral()
 }
 
 dependencies {
     //noinspection GradleDynamicVersion
-    implementation 'com.facebook.react:react-native:+'  // From node_modules
+    implementation 'com.facebook.react:react-android'
     implementation 'com.rmtheis:tess-two:9.1.0'
 }
-
-def configureReactNativePom(def pom) {
-    def packageJson = new groovy.json.JsonSlurper().parseText(file('../package.json').text)
-
-    pom.project {
-        name packageJson.title
-        artifactId packageJson.name
-        version = packageJson.version
-        group = "com.reactlibrary"
-        description packageJson.description
-        url packageJson.repository.baseUrl
-
-        licenses {
-            license {
-                name packageJson.license
-                url packageJson.repository.baseUrl + '/blob/master/' + packageJson.licenseFilename
-                distribution 'repo'
-            }
-        }
-
-        developers {
-            developer {
-                id packageJson.author.username
-                name packageJson.author.name
-            }
-        }
-    }
-}
-
-afterEvaluate { project ->
-    // some Gradle build hooks ref:
-    // https://www.oreilly.com/library/view/gradle-beyond-the/9781449373801/ch03.html
-    task androidJavadoc(type: Javadoc) {
-        source = android.sourceSets.main.java.srcDirs
-        classpath += files(android.bootClasspath)
-        classpath += files(project.getConfigurations().getByName('compile').asList())
-        include '**/*.java'
-    }
-
-    task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
-        classifier = 'javadoc'
-        from androidJavadoc.destinationDir
-    }
-
-    task androidSourcesJar(type: Jar) {
-        classifier = 'sources'
-        from android.sourceSets.main.java.srcDirs
-        include '**/*.java'
-    }
-
-    android.libraryVariants.all { variant ->
-        def name = variant.name.capitalize()
-        def javaCompileTask = variant.javaCompileProvider.get()
-
-        task "jar${name}"(type: Jar, dependsOn: javaCompileTask) {
-            from javaCompileTask.destinationDir
-        }
-    }
-
-    artifacts {
-        archives androidSourcesJar
-        archives androidJavadocJar
-    }
-
-    task installArchives(type: Upload) {
-        configuration = configurations.archives
-        repositories.mavenDeployer {
-            // Deploy to react-native-event-bridge/maven, ready to publish to npm
-            repository url: "file://${projectDir}/../android/maven"
-            configureReactNativePom pom
-        }
-    }
-}
diff --git a/node_modules/react-native-tesseract-ocr/android/src/main/java/com/reactlibrary/TesseractOcrModule.java b/node_modules/react-native-tesseract-ocr/android/src/main/java/com/reactlibrary/TesseractOcrModule.java
index e93e31c..72d6fa3 100644
--- a/node_modules/react-native-tesseract-ocr/android/src/main/java/com/reactlibrary/TesseractOcrModule.java
+++ b/node_modules/react-native-tesseract-ocr/android/src/main/java/com/reactlibrary/TesseractOcrModule.java
@@ -3,7 +3,6 @@ package com.reactlibrary;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Rect;
-import android.os.Environment;
 import android.util.Log;
 
 import androidx.annotation.Nullable;
@@ -34,16 +33,14 @@ public class TesseractOcrModule extends ReactContextBaseJavaModule {
     private static final String KEY_TOKEN_LEVEL = "level";
     private static final String TESS_FILES_DIRECTORY = "tessdata";
     private static final String TESS_FILES_EXTENSION = ".traineddata";
-    private static String DATA_PATH = Environment.getExternalStorageDirectory().toString();
+    private static String DATA_PATH;
     private static String TESS_FILES_PATH;
     private TessBaseAPI tesseract;
 
     public TesseractOcrModule(ReactApplicationContext reactContext) {
         super(reactContext);
         this.reactContext = reactContext;
-        if (!this.DATA_PATH.contains(reactContext.getPackageName())) {
-            this.DATA_PATH += File.separator + reactContext.getPackageName();
-        }
+        this.DATA_PATH = reactContext.getCacheDir().toString();
         this.TESS_FILES_PATH = this.DATA_PATH + File.separator + this.TESS_FILES_DIRECTORY;
     }
 
